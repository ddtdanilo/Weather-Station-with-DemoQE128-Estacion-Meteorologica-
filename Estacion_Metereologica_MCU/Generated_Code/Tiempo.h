/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : Tiempo.h
**     Project     : ProcessorExpert
**     Processor   : MC9S08QE128CLK
**     Component   : FreeCntr
**     Version     : Component 01.118, Driver 01.13, CPU db: 3.00.067
**     Compiler    : CodeWarrior HCS08 C Compiler
**     Date/Time   : 2014-06-12, 20:38, # CodeGen: 114
**     Abstract    :
**         This device "FreeCntr" implements a free running counter for
**         time measurement.
**     Settings    :
**         Timer name                  : TPM3 (16-bit)
**         Compare name                : TPM30
**         Counter shared              : No
**
**         High speed mode
**             Prescaler               : divide-by-16
**             Clock                   : 1572864 Hz
**           Period
**             Xtal ticks              : 1365
**             microseconds            : 41666
**             milliseconds            : 42
**             seconds (real)          : 0.041666030884
**             Hz                      : 24
**           Frequency of counting (Bus clock / prescaler)
**             Hz                      : 1572864
**
**         Initialization:
**              Timer                  : Enabled
**
**         Timer registers
**              Counter                : TPM3CNT   [$0061]
**              Mode                   : TPM3SC    [$0060]
**              Run                    : TPM3SC    [$0060]
**              Prescaler              : TPM3SC    [$0060]
**              Compare                : TPM3C0V   [$0066]
**
**         User handling procedure     : not specified
**     Contents    :
**         Reset           - byte Tiempo_Reset(void);
**         GetCounterValue - byte Tiempo_GetCounterValue(Tiempo_TTimerValue *Value);
**
**     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
**     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/
/*!
** @file Tiempo.h
** @version 01.13
** @brief
**         This device "FreeCntr" implements a free running counter for
**         time measurement.
*/         
/*!
**  @addtogroup Tiempo_module Tiempo module documentation
**  @{
*/         

#ifndef __Tiempo
#define __Tiempo

/* MODULE Tiempo. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PE_Timer.h"
/* Include inherited components */
#include "Cpu.h"

/* PUBLISHED CONSTANTS */
#define Tiempo_COUNTER_INPUT_CLOCK_HZ 0x00180000UL /* Initial counter input clock frequency [Hz] */
#define Tiempo_PERIOD_VALUE           0xFFFFUL /* Initial period value in ticks of the timer */
#define Tiempo_PRESCALER_VALUE           0x10U /* Prescaler value of the timer in high speed mode */
#define Tiempo_TIMER_INPUT_CLOCK         0x01800000UL /* Deprecated, Initial timer input clock value [Hz] */
#define Tiempo_UP_COUNTER                1 /* The timer counts upwards */
/* High speed mode constants */
#define Tiempo_COUNTER_INPUT_CLOCK_HZ_HIGH 0x00180000UL /* Counter input clock frequency in high speed mode [Hz] */
#define Tiempo_PERIOD_VALUE_HIGH      0xFFFFUL /* Period value in ticks of the timer in high speed mode */
#define Tiempo_PRESCALER_VALUE_HIGH      0x10U /* Prescaler value of the timer in high speed mode */
#define Tiempo_TIMER_INPUT_CLOCK_HIGH    0x01800000UL /* Deprecated, Initial timer input clock value [Hz] */

typedef word Tiempo_TTimerValue;       /* Counter or compare value, width depends on timer width */

#define Tiempo_Reset() ( \
  TPM3CNTH = 0x00U,                    /* Reset HW Counter */ \
  (byte)ERR_OK                         /* Return result */ \
)
/*
** ===================================================================
**     Method      :  Tiempo_Reset (component FreeCntr)
*/
/*!
**     @brief
**         This method resets the timer-counter (sets to zero for
**         up-counting HW or to appropriate value for down-counting HW).
**         The method is available only if the counter register can be
**         set by software and the counter is not shared.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
*/
/* ===================================================================*/

#define Tiempo_GetCounterValue(Value) ( \
  *(Value) = TPM3CNT,                  /* Set the flag "events disabled" */ \
  (byte)ERR_OK                         /* Return result */ \
)
/*
** ===================================================================
**     Method      :  Tiempo_GetCounterValue (component FreeCntr)
*/
/*!
**     @brief
**         This method returns a content of the counter.
**     @param
**         Value           - Pointer to returned value.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
*/
/* ===================================================================*/

void Tiempo_Init(void);
/*
** ===================================================================
**     Method      :  Tiempo_Init (component FreeCntr)
**
**     Description :
**         Initializes the associated peripheral(s) and the component 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/


/* END Tiempo. */

#endif /* ifndef __Tiempo */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
